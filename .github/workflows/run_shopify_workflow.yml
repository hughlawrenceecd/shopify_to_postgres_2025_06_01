name: Run shopify pipeline from shopify_dlt_pipeline.py - Update
'on':
  schedule:
  - cron: '*/5 * * * *'
  workflow_dispatch: null
env:
  DESTINATION__POSTGRES__CREDENTIALS__DATABASE: defaultdb
  DESTINATION__POSTGRES__CREDENTIALS__USERNAME: doadmin
  DESTINATION__POSTGRES__CREDENTIALS__HOST: ecd-data-warehouse-do-user-23910252-0.h.db.ondigitalocean.com
  DESTINATION__POSTGRES__CREDENTIALS__PORT: '25060'
  DESTINATION__POSTGRES__CREDENTIALS__CONNECT_TIMEOUT: '600'
  SOURCES__SHOPIFY_DLT__PRIVATE_APP_PASSWORD: ${{ secrets.SOURCES__SHOPIFY_DLT__PRIVATE_APP_PASSWORD }}
  DESTINATION__POSTGRES__CREDENTIALS__PASSWORD: ${{ secrets.DESTINATION__POSTGRES__CREDENTIALS__PASSWORD }}
jobs:
  maybe_skip:
    runs-on: self-hosted
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@v5
      with:
        concurrent_skipping: always
        skip_after_successful_duplicate: 'false'
        do_not_skip: '[]'
  run_pipeline:
    needs: maybe_skip
    if: needs.maybe_skip.outputs.should_skip != 'true'
    runs-on: self-hosted
    steps:
    - name: Check out
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.18'
    - uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv
      with:
        requirement_files: requirements_github_action.txt
    - uses: syphar/restore-pip-download-cache@v1
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'
    - run: pip install -r requirements_github_action.txt
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'
    - name: Run pipeline script
      run: python 'shopify_dlt_pipeline.py'
